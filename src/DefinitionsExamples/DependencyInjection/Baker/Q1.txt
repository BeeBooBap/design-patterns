1.Dependency injection is the process by which a container or some middleman class/method supplies objects of a class
  to another class that requires said objects in order to execute. For example, if we had class A, B, C and D, and class
  A required objects of class C and D, it could use class B to acquire said objects by having class B create
  instantiations of class C and D and pass them through to class A for use.

  This encourages loose coupling because it prevents the case where you would have class A directly create instances of
  classes, such as using the "new" keyword, meaning class A would have hard dependencies.

  In the Baker example, it uses an Assistant class to generate instances of Oven and Ingredients, which are then used
  by the Baker class. The Baker class itself however never creates the object instances, it simply uses them. Thus, by
  using the Assistant class, it removes tight coupling.

  // consider HelloWorld example by dependency injection.

